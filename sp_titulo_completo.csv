,sp,autores,titulo
1,SP1,Perez et al. 2019,A proposed model-driven approach to manage architectural technical debt life cycle
2,SP2,Martini et al 2017,A semi-automated framework for the identification and estimation of architectural technical debt;A comparative case-study
3,SP3,Roveda et al. 2018,Towards an Architectural Debt Index
4,SP4,Snipes et al. 2018,A case study of the effects of architecture debt on software evolution effort
5,SP5,Nayebi et al. 2019,A longitudinal study of identifying and paying down architecture debt
6,SP6,Feng et al. 2019,Active hotspot;an issue-oriented model to monitor software evolution and degradation
7,SP7,Li et al. 2014,An empirical investigation of modularity metrics for indicating architectural technical debt
8,SP8,Martini et al. 2016,An empirically developed method to aid decisions on architectural technical debt refactoring: AnaConDebt
9,SP9,Xiao et al. 2016,Identifying and Quantifying Architectural Debt
10,SP10,Verdecchia 2018,Identifying architectural technical debt in android applications through automated compliance checking
11,SP11,Zitzweitz et al. 2019,Mitigating technical and architectural debt with sonargraph
12,SP12,Martini and Bosch 2017,On the interest of architectural technical debt;Uncovering the contagious debt phenomenon
13,SP13,Fontana et al. 2016,Tool support for evaluating architectural debt of an existing system;An experience report
14,SP14,Li et al. 2015,Architectural technical debt identification based on architecture decisions and change scenarios
15,SP15,Martini et al. 2014,Architecture technical debt: Understanding causes and a qualitative model
16,SP16,Martini et al. 2016,Estimating and quantifying the benefits of refactoring to improve a component modularity: a case study
17,SP17,Martini et al. 2018,Identifying and prioritizing architectural debt through architectural smells;a case study in a large software company
18,SP18,Cai and Kazman 2016,Software Architecture Health Monitor
19,SP19,Kazman et al. 2015,A case study in locating the architectural roots of technical debt
20,SP20,Martini and Bosch 2015,Towards prioritizing architecture technical debt: information needs of architects and product owners
21,SP21,Tommasel 2019,Applying social network analysis techniques to architectural smell prediction
22,SP22,Nord et al. 2012,In search of a metric for managing architectural technical debt
23,SP23,Cai and Kazman 2019,DV8
24,SP24,Skiada et al. 2018,Exploring the relationship between software modularity and technical debt
25,SP25,Eliasson et al. 2015,Identifying and visualizing Architectural Debt and its efficiency interest in the automotive domain: A case study
26,SP26,Fontana et al. 2016,Technical debt indexes provided by tools;a preliminary discussion
27,SP27,MacComark et al. 2016,Technical debt and system architecture: The impact of coupling on defect-related activity
28,SP28,Sas et al. 2019,Investigating instability architectural smells evolution: an exploratory case study
29,SP29,Fontana et al. 2019,Pagerank and criticality of architectural smells
30,SP30,Spinellis et al. 2019,Evolution of the Unix system architecture: an exploratory case study
31,SP31,Izurieta et al. 2018,A position study to investigate technical debt associated with security weaknesses
32,SP32,Besker et al. 2017,The pricey bill of technical debt;When and by whom will it be paid?
33,SP33,Ampatzoglou et al. 2016,The perception of technical debt in the embedded systems domain: an industrial case study
34,SP34,Martini et al. 2016,The introduction of technical debt tracking in large companies
35,SP35,Aaramaa et al 2017,Requirements volatility in software architecture design: an exploratory case study
36,SP36,Martini et al 2015,Investigating architectural technical debt accumulation and refactoring over time;A multiple-case study
37,SP37,Cai el al 2018,Design rule spaces: A new model for representing and analyzing software architecture
38,SP38,Bogner et al 2019,Assuring the evolvability of microservices: insights into industry practices and challenges
39,SP39,Ludwig et al. 2017,Compiling static software metrics for reliability and maintainability from GitHub repositories
40,SP40,Curtis et al 2012,Estimating the principal of an application's technical debt
41,SP41,Kumar et al 2018,Exploring multilateral Cloud computing security architectural design debt in terms of technical debt
42,SP42,Hanssen et al 2019,Identifying scalability debt in open systems
43,SP43,Sierra et al 2019,Is self-admitted technical debt a good indicator of architectural divergences?
44,SP44,Bogner et al 2018,Limiting technical debt with maintainability assurance: an industry survey on used techniques and differences with service-and microservice-based systems
45,SP45,Zalewski 2017,Risk Appetite in Architectural Decision-Making
46,SP46,Tamburri 2019,Software architecture social debt;Managing the incommunicability factor
47,SP47,Verdechia et al. 2020,Architectural technical debt;A grounded theory
48,SP48,Pujols et al. 2020,Skuld: A self-learning tool for impact-driven technical debt management
49,SP49,Molnar et al. 2020,Long-term evaluation of technical debt in open-source software
50,SP50,Janes et al. 2020,Towards an Approach to Identify Obsolete Features based on Importance and Technical Debt
51,SP51,Maikantis et al. 2020,Software architecture reconstruction via a genetic algorithm: Applying the move class refactoring
52,SP52,San Mart√≠n et al 2020,Characterizing Architectural Drifts of Adaptive Systems
53,SP53,de Toledo el al. 2020,Improving agility by managing shared libraries in microservices
54,SP54,Rademacher et al. 2020,A modeling method for systematic architecture reconstruction of microservice-based software systems
55,SP55,Larrucea et al. 2020,Managing security debt across PLC phases in a VSE context
56,SP56,Raibulet et al. 2020,A preliminary analysis of self-adaptive systems according to different issues
57,SP57,Sharma et al. 2020,An empirical investigation on the relationship between design and architecture smells
58,SP58,Verdecchia et al. 2020,ATDx: Building an Architectural Technical Debt Index
59,SP59,Perez et al. 2020,A semiautomatic approach to identify architectural technical debt from heterogeneous artifacts
60,SP60,Sas et al. 2021,The perception of Architectural Smells in industrial practice
61,SP61,Belle et al. 2021,Systematically reviewing the layered architectural pattern principles and their use to reconstruct software architectures
62,SP62,de Toledo et al. 2021,Identifying architectural technical debt; principal; and interest in microservices: A multiple-case study
63,SP63,Xiao et al. 2021,Detecting the Locations and Predicting the Maintenance Costs of Compound Architectural Debts
64,SP64,Verdecchia et al. 2021,Building and evaluating a theory of architectural technical debt in software-intensive systems
65,SP65,Ospina et al. 2021,ATDx: A tool for providing a data-driven overview of architectural technical debt in software-intensive systems
66,SP66,de Toledo et al. 2021,Reducing Incidents in Microservices by Repaying Architectural Technical Debt
67,SP67,Borowa et al. 2021,The influence of cognitive biases on architectural technical debt
68,SP68,Sas et al. 2022,On the relation between architectural smells and source code changes
69,SP69,De Toledo et al. 2022,Accumulation and prioritization of architectural debt in three companies migrating to microservices
70,SP70,Verdecchia et al. 2022,Empirical evaluation of an architectural technical debt index in the context of the Apache and ONAP ecosystems
